{"version":3,"file":"static/webpack/static/development/pages/index.js.baa79768d4feba69a2c7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport AppContainer from '../components/AppContainer'\nimport posed from 'react-pose';\n\nconst ExpandableBox = posed.div({\n  expanded: { marginTop: 0 },\n  contracted: { marginTop: 30 }\n});\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      topic: '',\n      audience: '',\n      email: '',\n      twitter: '',\n      anonymity: false,\n      formIsActive: false\n    }\n  }\n  componentDidMount() {\n    document.querySelectorAll('[data-autoresize]').forEach(function (element) {\n      element.style.boxSizing = 'border-box';\n      var offset = element.offsetHeight - element.clientHeight;\n      document.addEventListener('input', function (event) {\n        event.target.style.height = 'auto';\n        event.target.style.height = event.target.scrollHeight + offset + 'px';\n      });\n      element.removeAttribute('data-autoresize');\n    });\n  }\n  handleFormActive = () => {\n    this.setState({ formIsActive: true })\n  }\n  handleTopicChange = e => {\n    this.setState({ topic: e.target.value })\n  }\n  handleAudienceChange = e => {\n    this.setState({ audience: e.target.value })\n  }\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value })\n  }\n  handleTwitterChange = e => {\n    this.setState({ twitter: e.target.value })\n  }\n  handleAnonymityChange = e => {\n    this.setState({ anonymity: !this.state.anonymity })\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch('https://en7zz3uf5iumrri.m.pipedream.net', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"anonymous\": this.state.anonymity.toString(),\n        \"twitter_handle\": this.state.twitter,\n        \"email\": this.state.email,\n        \"mystery\": this.state.topic,\n        \"mystery_audience\": this.state.audience\n      })\n    })\n    // reset form\n    this.setState({\n      topic: '',\n      audience: '',\n      email: '',\n      twitter: '',\n      anonymity: false\n    })\n  }\n  render() {\n    return (\n      <div>\n        <AppContainer>\n          {\n            !this.state.formIsActive &&\n            <div className=\"title-section-wrapper center\">\n              <h1 className=\"font-lrg\">Serious question.</h1>\n              <h1 className=\"font-lrg\">What would you like explained?</h1>\n              <h2 className=\"font-color-grey\">Welcome to a project where we listen to your mysteries and then kick off a tournament to explain them.</h2>\n            </div>\n          }\n          <ExpandableBox onClick={this.handleFormActive} pose={this.state.formIsActive ? 'expanded' : 'contracted'} className=\"card-section-wrapper font-sml\">\n            <form className=\"margin-bottom-med\">\n              <div className=\"field-wrap margin-bottom-sml\">\n                <label className=\"how-label\">How would you explain</label>\n                <textarea className=\"input-with-center-text\" onChange={this.handleTopicChange} data-autoresize rows=\"1\" type=\"text\" placeholder=\"how does popcorn work\"></textarea>\n              </div>\n              <div className=\"field-wrap margin-bottom-sml\">\n                <label>to a</label>\n                <textarea className=\"input-with-center-text\" onChange={this.handleAudienceChange} data-autoresize rows=\"1\" type=\"text\" placeholder=\"space alien who has never visited earth\"></textarea>\n              </div>\n              <div className=\"margin-top-med margin-bottom-sml\">\n                <div className=\"full-row-width\"><label className=\"constrained-width-input\">Who are you on email:</label></div>\n                <input className=\"constrained-width-input\" onChange={this.handleEmailChange} type=\"text\" placeholder=\"mayor@dani.town\" />\n              </div>\n              <div className=\"margin-top-med margin-bottom-sml\">\n                <div className=\"full-row-width\"><label className=\"constrained-width-input\">Who are you on twitter:</label></div>\n                <input className=\"constrained-width-input\" onChange={this.handleTwitterChange} type=\"text\" placeholder=\"@thedanigrant\" />\n              </div>\n              <div className=\"field-wrap margin-bottom-sml\">\n                <label>Can we share who brought us this mystery, or are you posting anonymously?</label>\n                <input onChange={this.handleAnonymityChange} type=\"checkbox\" checked={!this.state.anonymity} />\n                <p>You can attribute this mystery to me.</p>\n              </div>\n            </form>\n            <div onClick={this.handleSubmit} className=\"button background-color-purple center\" type=\"submit\">Submit Mystery</div>\n          </ExpandableBox>\n          <img id=\"bitmoji-image\" src=\"/images/bitmoji-thinking.png\" />\n        </AppContainer>\n      </div>\n    )\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuBA;AAAA;AAAA;AACA;AACA;AAzBA;AA0BA;AAAA;AAAA;AACA;AACA;AA5BA;AA6BA;AAAA;AAAA;AACA;AACA;AA/BA;AAgCA;AAAA;AAAA;AACA;AACA;AAlCA;AAmCA;AAAA;AAAA;AACA;AACA;AArCA;AAsCA;AAAA;AAAA;AACA;AACA;AAxCA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AA3DA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAwxGA;AACA;AA0GA;;;;A","sourceRoot":""}